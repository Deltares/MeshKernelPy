{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Mesh2d refine based on gridded samples with a costline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "901f61a0",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.close(\"all\")\n",
    "import xarray as xr\n",
    "import numpy as np\n",
    "import meshkernel\n",
    "import contextily as ctx\n",
    "from meshkernel import (\n",
    "    MakeGridParameters,\n",
    "    MeshKernel,\n",
    "    GriddedSamples,\n",
    "    ProjectionType,\n",
    "    MeshRefinementParameters,\n",
    "    RefinementType,\n",
    ")\n",
    "\n",
    "mk_version = meshkernel.__version__"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "73215aad",
   "metadata": {},
   "source": [
    "### Sampled bathymetry"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "7cae7dd6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Sampled GEBCO bathymetry\n",
    "lon_np = np.array(\n",
    "    [\n",
    "        -68.54791667,\n",
    "        -68.46458333,\n",
    "        -68.38125,\n",
    "        -68.29791667,\n",
    "        -68.21458333,\n",
    "        -68.13125,\n",
    "        -68.04791667,\n",
    "        -67.96458333,\n",
    "    ]\n",
    ")\n",
    "lat_np = np.array(\n",
    "    [\n",
    "        11.80208333,\n",
    "        11.88541667,\n",
    "        11.96875,\n",
    "        12.05208333,\n",
    "        12.13541667,\n",
    "        12.21875,\n",
    "        12.30208333,\n",
    "        12.38541667,\n",
    "        12.46875,\n",
    "        12.55208333,\n",
    "    ]\n",
    ")\n",
    "values_np_2d = np.array(\n",
    "    [\n",
    "        [-1700, -1769, -1688, -1641, -1526, -1291, -1121, -1537],\n",
    "        [-1561, -1674, -1354, -757, -837, -838, -1080, -1466],\n",
    "        [-1630, -1390, -710, -562, -479, -753, -1246, -1703],\n",
    "        [-1553, -1446, -1147, -248, -175, -712, -1621, -1920],\n",
    "        [-1503, -1380, -1080, -305, 18, -543, -1563, -2241],\n",
    "        [-1477, -1571, -3, 100, 11, -891, -1521, -2446],\n",
    "        [-1892, -1808, 16, -3102, -2015, -1302, -1484, -2581],\n",
    "        [-2516, -2091, -1957, -2647, -1422, -1486, -2340, -2702],\n",
    "        [-2689, -2353, -2614, -3612, -3058, -3017, -3181, -2848],\n",
    "        [-3110, -3025, -3861, -3927, -3818, -4162, -4386, -4504],\n",
    "    ]\n",
    ")\n",
    "values_np = values_np_2d.flatten().astype(np.float32)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b22a757a",
   "metadata": {},
   "source": [
    "### Generate regular grid"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "7ee0e694",
   "metadata": {},
   "outputs": [],
   "source": [
    "lon_min, lon_max, lat_min, lat_max = -68.55, -67.9, 11.8, 12.6\n",
    "dx = dy = 0.05\n",
    "make_grid_parameters = MakeGridParameters(\n",
    "    angle=0,\n",
    "    origin_x=lon_min,\n",
    "    origin_y=lat_min,\n",
    "    upper_right_x=lon_max,\n",
    "    upper_right_y=lat_max,\n",
    "    block_size_x=dx,\n",
    "    block_size_y=dy,\n",
    ")\n",
    "\n",
    "mk = MeshKernel(projection=ProjectionType(1))\n",
    "mk.curvilinear_compute_rectangular_grid_on_extension(make_grid_parameters)\n",
    "mk.curvilinear_convert_to_mesh2d()  # convert to ugrid/mesh2d"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "117653b8",
   "metadata": {},
   "source": [
    "### Perform refinement"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "a361c550",
   "metadata": {},
   "outputs": [],
   "source": [
    "gridded_samples = GriddedSamples(\n",
    "    x_coordinates=lon_np, y_coordinates=lat_np, values=values_np\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "1544e774",
   "metadata": {},
   "outputs": [],
   "source": [
    "mesh_refinement_parameters = MeshRefinementParameters(\n",
    "    min_edge_size=300,  # always in meters\n",
    "    refinement_type=RefinementType(1),  # Wavecourant/1,\n",
    "    connect_hanging_nodes=True,  # set to False to do multiple refinement steps (e.g. for multiple regions)\n",
    "    smoothing_iterations=2,\n",
    "    max_courant_time=120,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "0f40c818",
   "metadata": {},
   "outputs": [],
   "source": [
    "mk.mesh2d_refine_based_on_gridded_samples(\n",
    "    gridded_samples=gridded_samples,\n",
    "    mesh_refinement_params=mesh_refinement_parameters,\n",
    "    use_nodal_refinement=True,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "a9d0c97e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "mk.mesh2d_get().plot_edges(ax=ax, linewidth=1)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
